name: CI Deploy Next.js App to EC2

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm install
      
    - name: Run tests
      run: npm test
      
    - name: Build application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
        
    - name: Deploy to EC2
      env:
        PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        HOST: ${{ secrets.EC2_HOST }}
        USER: ${{ secrets.EC2_USER }}
      run: |
        # Write the private key to a file
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem
        
        # Create the .next directory if it doesn't exist on the EC2 instance
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${HOST} '
          mkdir -p ~/app/.next
        '
        
        # Copy the build files to EC2
        scp -o StrictHostKeyChecking=no -i private_key.pem -r .next/* ${USER}@${HOST}:~/app/.next/
        scp -o StrictHostKeyChecking=no -i private_key.pem package*.json ${USER}@${HOST}:~/app/
        
        # Install dependencies and restart the application on EC2
        ssh -o StrictHostKeyChecking=no -i private_key.pem ${USER}@${HOST} '
          cd ~/app
          npm install --production
          pm2 restart next-app || pm2 start npm --name "next-app" -- start
        '
        
        # Clean up the private key
        rm -f private_key.pem 
